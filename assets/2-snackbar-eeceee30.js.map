{"version":3,"file":"2-snackbar-eeceee30.js","sources":["../../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// const btnEl = document.querySelector('button');\n// const delayEl = document.querySelector('input[name=\"delay\"]');\n// const fulfilledEl = document.querySelector('input[value=\"fulfilled\"]');\n\n// let delay = 0;\n\n// delayEl.addEventListener('input', event => {\n//   delay = event.currentTarget.value;\n// });\n\n// function handleClick(event) {\n//   event.preventDefault();\n//   const promise = new Promise((resolve, reject) => {\n//     if (fulfilledEl.checked) {\n//       resolve(\n//         iziToast.show({\n//           message: `✅ Fulfilled promise in ${delay}ms`,\n//           position: 'topRight',\n//           timeout: delay,\n//           backgroundColor: '#326101',\n//           messageColor: '#FFFFFF',\n//           iconColor: '#FFFFFF',\n//           transitionIn: 'fadeln',\n//         })\n//       );\n//     } else {\n//       reject(\n//         iziToast.show({\n//           message: `❌ Rejected promise in ${delay}ms`,\n//           position: 'topRight',\n//           timeout: delay,\n//           backgroundColor: '#EF4040',\n//           messageColor: '#FFFFFF',\n//           iconColor: '#FFFFFF',\n//           transitionIn: 'fadeln',\n//         })\n//       );\n//     }\n//   });\n//   promise.then(\n//     value => {\n//       console.log(`✅ Fulfilled promise in ${delay}ms`);\n//     },\n//     error => {\n//       console.log(`❌ Rejected promise in ${delay}ms`);\n//     }\n//   );\n// }\n\n// btnEl.addEventListener('click', handleClick);\n\n\nconst btnEl = document.querySelector('button');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst fulfilledEl = document.querySelector('input[value=\"fulfilled\"]');\n\nlet delay = 0;\n\ndelayEl.addEventListener('input', event => {\n  delay = event.currentTarget.value;\n});\n\nfunction handleClick(event) {\n  event.preventDefault();\n  const promise = new Promise((resolve, reject) => {\n    if (fulfilledEl.checked) {\n      resolve(\n        \n      );\n    } else {\n      reject(\n        \n      );\n    }\n  });\n  promise.then(\n    value => {\n      console.log(\n        iziToast.show({\n          message: `✅ Fulfilled promise in ${delay}ms`,\n          position: 'topRight',\n          timeout: delay,\n          backgroundColor: '#326101',\n          messageColor: '#FFFFFF',\n          iconColor: '#FFFFFF',\n          transitionIn: 'fadeln',\n        }));\n    },\n    error => {\n      console.log(\n        iziToast.show({\n          message: `❌ Rejected promise in ${delay}ms`,\n          position: 'topRight',\n          timeout: delay,\n          backgroundColor: '#EF4040',\n          messageColor: '#FFFFFF',\n          iconColor: '#FFFFFF',\n          transitionIn: 'fadeln',\n        }));\n    }\n  );\n}\n\nbtnEl.addEventListener('click', handleClick);"],"names":["btnEl","delayEl","fulfilledEl","delay","event","handleClick","resolve","reject","value","iziToast","error"],"mappings":"yCAuDA,MAAMA,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAU,SAAS,cAAc,qBAAqB,EACtDC,EAAc,SAAS,cAAc,0BAA0B,EAErE,IAAIC,EAAQ,EAEZF,EAAQ,iBAAiB,QAASG,GAAS,CACzCD,EAAQC,EAAM,cAAc,KAC9B,CAAC,EAED,SAASC,EAAYD,EAAO,CAC1BA,EAAM,eAAc,EACJ,IAAI,QAAQ,CAACE,EAASC,IAAW,CAC3CL,EAAY,QACdI,EAEN,EAEMC,EAEN,CAEA,CAAG,EACO,KACNC,GAAS,CACP,QAAQ,IACNC,EAAS,KAAK,CACZ,QAAS,0BAA0BN,CAAK,KACxC,SAAU,WACV,QAASA,EACT,gBAAiB,UACjB,aAAc,UACd,UAAW,UACX,aAAc,QACf,CAAA,CAAC,CACL,EACDO,GAAS,CACP,QAAQ,IACND,EAAS,KAAK,CACZ,QAAS,yBAAyBN,CAAK,KACvC,SAAU,WACV,QAASA,EACT,gBAAiB,UACjB,aAAc,UACd,UAAW,UACX,aAAc,QACf,CAAA,CAAC,CACL,CACL,CACA,CAEAH,EAAM,iBAAiB,QAASK,CAAW"}